{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","changeDarkTheme","theme","toggleDarkTheme","React","createElement","className","concat","mode","Link","to","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutText","onClick","toggleMode","role","style","cursor","defaultProps","TextForm","text","setText","useState","detect","LanguageDetect","language","setDetectedLanguage","Fragment","color","heading","value","onChange","event","target","rows","backgroundColor","darkTheme","handleUpClick","newText","toUpperCase","showAlert","disabled","length","handleLoClick","toLowerCase","handleDetectLanguage","trim","copyText","navigator","clipboard","writeText","extractSpaces","split","join","handleClearClick","filter","propTyps","PropTypes","string","isRequired","Alert","height","alert","word","lower","charAt","slice","capitalize","msg","About","myAccordionStyle","data-bs-parent","App","setMode","setAlert","bgColor","setBgColor","setDarkTheme","message","setTimeout","changeBgColor","clr","document","body","Router","Routes","Route","exact","path","element","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.b0292286.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  const changeDarkTheme = (theme) => {\r\n    if (theme === \"default\") {\r\n      props.toggleDarkTheme(\"default\");\r\n    } else if (theme === \"Blue\") {\r\n      props.toggleDarkTheme(\"Blue\");\r\n    } else if (theme === \"Green\") {\r\n      props.toggleDarkTheme(\"Green\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          {props.title}\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">\r\n                {props.aboutText}\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n          <div\r\n            className={`form-check form-switch text-${\r\n              props.mode === \"dark\" ? \"light\" : \"dark\"\r\n            }`}\r\n          >\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              onClick={props.toggleMode}\r\n              role=\"switch\"\r\n              id=\"flexSwitchCheckDefault\"\r\n              style={{ cursor: \"pointer\" }}\r\n            />\r\n            {/* <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label> */}\r\n            <div className=\"dropdown-center\">\r\n              <button\r\n                className=\"navbar-toggler\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#navbarNavDarkDropdown\"\r\n                aria-controls=\"navbarNavDarkDropdown\"\r\n                aria-expanded=\"false\"\r\n                aria-label=\"Toggle navigation\"\r\n              >\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n              </button>\r\n              <div\r\n                className=\"collapse navbar-collapse\"\r\n                id=\"navbarNavDarkDropdown\"\r\n              >\r\n                <ul className=\"navbar-nav\">\r\n                  <li className=\"nav-item dropdown\">\r\n                    <button\r\n                      className={`btn btn-sm btn-${props.mode} dropdown-toggle`}\r\n                      data-bs-toggle=\"dropdown\"\r\n                      aria-expanded=\"false\"\r\n                    >\r\n                      {props.mode === \"dark\" ? \"Dark\" : \"Light\"} Mode\r\n                    </button>\r\n                    <ul className={`dropdown-menu dropdown-menu-${props.mode}`}>\r\n                      <li>\r\n                        <label\r\n                          className=\"dropdown-item\"\r\n                          onClick={() => changeDarkTheme(\"default\")}\r\n                          style={{ cursor: \"pointer\" }}\r\n                        >\r\n                          Default\r\n                        </label>\r\n                      </li>\r\n                      <li>\r\n                        <label\r\n                          className=\"dropdown-item\"\r\n                          onClick={() => changeDarkTheme(\"Blue\")}\r\n                          style={{ cursor: \"pointer\" }}\r\n                        >\r\n                          Blue\r\n                        </label>\r\n                      </li>\r\n                      <li>\r\n                        <label\r\n                          className=\"dropdown-item\"\r\n                          onClick={() => changeDarkTheme(\"Green\")}\r\n                          style={{ cursor: \"pointer\" }}\r\n                        >\r\n                          Green\r\n                        </label>\r\n                      </li>\r\n                    </ul>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* <form className=\"d-flex\" role=\"search\">\r\n            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n            <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n          </form> */}\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.defaultProps = { title: \"Set Title Here\", aboutText: \"About Text Here\" };\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport LanguageDetect from \"languagedetect\";\r\n\r\nexport default function TextForm(props) {\r\n  // const arrayColumn = (arr, n) => arr.map(x => x[n]+'\\n');\r\n  const [text, setText] = useState(\"\");\r\n  let detect = new LanguageDetect();\r\n  const [language, setDetectedLanguage] = useState(\"English\");\r\n  const handleUpClick = () => {\r\n    // console.log('Upper case button clicked');\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Text has been converted to uppercase.\", \"success\");\r\n  };\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n    // console.log('On change');\r\n  };\r\n  const handleLoClick = () => {\r\n    setText(text.toLowerCase());\r\n    props.showAlert(\"Text has been converted to lowercase.\", \"success\");\r\n    // console.log(text.split(\" \") + text.split(\" \").length);\r\n  };\r\n  const handleClearClick = () => {\r\n    setText(\"\");\r\n    props.showAlert(\"Text has been cleared.\", \"success\");\r\n  };\r\n  const handleDetectLanguage = () => {\r\n    // console.log(detect.detect(text)[0][0]);\r\n    if (text.trim().length > 0) {\r\n      setDetectedLanguage(detect.detect(text)[0][0]);\r\n    }\r\n    props.showAlert(\"Text language has been detected.\", \"success\");\r\n  };\r\n  const copyText = () => {\r\n    // const el = document.getElementById(\"mybox\");\r\n    // el.select();\r\n    navigator.clipboard.writeText(text);\r\n    // document.getSelection().removeAllRanges();\r\n    props.showAlert(\"Text has been copied to clipboard.\", \"success\");\r\n  };\r\n  const extractSpaces = () => {\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"Extra spaces has been removed.\", \"success\");\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div\r\n          className={`mb-4`}\r\n          style={{ color: props.mode === \"dark\" ? \"white\" : \"#042743\" }}\r\n        >\r\n          <h2>{props.heading}</h2>\r\n          {/* <label htmlFor=\"myox\" className=\"form-label\">Example textarea</label> */}\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"mybox\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            rows=\"8\"\r\n            style={{\r\n              backgroundColor: props.mode === \"dark\" ? \"grey\" : \"white\",\r\n              color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n            }}\r\n          ></textarea>\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          className={`btn btn-${\r\n            props.darkTheme === \"Green\" ? \"success\" : \"primary\"\r\n          } mx-2 my-2`}\r\n          onClick={handleUpClick}\r\n          disabled={text.length === 0}\r\n        >\r\n          UpperCase\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className={`btn btn-${\r\n            props.darkTheme === \"Green\" ? \"success\" : \"primary\"\r\n          } mx-2 my-2`}\r\n          onClick={handleLoClick}\r\n          disabled={text.length === 0}\r\n        >\r\n          LowerCase\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className={`btn btn-${\r\n            props.darkTheme === \"Green\" ? \"success\" : \"primary\"\r\n          } mx-2 my-2`}\r\n          onClick={handleDetectLanguage}\r\n          disabled={text.length === 0}\r\n        >\r\n          Detect Language\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className={`btn btn-${\r\n            props.darkTheme === \"Green\" ? \"success\" : \"primary\"\r\n          } mx-2 my-2`}\r\n          onClick={copyText}\r\n          disabled={text.length === 0}\r\n        >\r\n          Copy Text\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className={`btn btn-${\r\n            props.darkTheme === \"Green\" ? \"success\" : \"primary\"\r\n          } mx-2 my-2`}\r\n          onClick={extractSpaces}\r\n          disabled={text.length === 0}\r\n        >\r\n          Extract Spaces\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-danger mx-2\"\r\n          onClick={handleClearClick}\r\n          disabled={text.length === 0}\r\n        >\r\n          Clear\r\n        </button>\r\n      </div>\r\n      <div\r\n        className={`container my-3`}\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"#042743\" }}\r\n      >\r\n        <h1>Your text summary</h1>\r\n        <p>\r\n          Language of the entered text is{\" \"}\r\n          <strong>{language.toUpperCase()}</strong>.\r\n        </p>\r\n        <p>\r\n          Your text has{\" \"}\r\n          {\r\n            text\r\n              .trim()\r\n              .split(/\\s+/)\r\n              .filter((text) => text.length > 0).length\r\n          }{\" \"}\r\n          words and {text.trim().length} characters.\r\n        </p>\r\n        <p>\r\n          Text can be read in{\" \"}\r\n          {0.008 *\r\n            text\r\n              .trim()\r\n              .split(/\\s+/)\r\n              .filter((text) => text.length > 0).length}{\" \"}\r\n          minutes.\r\n        </p>\r\n        <h2>Preview</h2>\r\n        <p>\r\n          {text.length > 0\r\n            ? text.trim()\r\n            : \"Enter some text in text area to preview.\"}\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nTextForm.propTyps = { heading: PropTypes.string.isRequired };\r\n","import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n  const capitalize = (word) => {\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  };\r\n  return (\r\n    <div style={{ height: \"50px\" }}>\r\n      {props.alert && (\r\n        <div\r\n          className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n          role=\"alert\"\r\n          // style={{ position: \"fixed\", width: \"100%\", zIndex: \"1000\" }}\r\n        >\r\n          <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import React from \"react\";\r\n\r\nexport default function About(props) {\r\n  const myAccordionStyle = {\r\n    color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n    backgroundColor: props.mode === \"dark\" ? \"rgb(33, 37, 41)\" : \"white\",\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"container md-3\"\r\n      style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\r\n    >\r\n      <h2>About Us</h2>\r\n      <div className=\"accordion accodion-flush \" id=\"accordionExample\">\r\n        <div className=\"accordion-item my-2\">\r\n          <h2 className=\"accordion-header\">\r\n            <button\r\n              className=\"accordion-button\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseOne\"\r\n              aria-expanded=\"true\"\r\n              aria-controls=\"collapseOne\"\r\n              style={myAccordionStyle}\r\n            >\r\n              <strong>Analyze your text</strong>\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseOne\"\r\n            className=\"accordion-collapse collapse show\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myAccordionStyle}>\r\n              Textutils gives you a way to analyze your text quickly and\r\n              efficiently. Be it word count, character count, capitalize,\r\n              decapitalize, find language(60%), remove extra spaces or copthe\r\n              text to clipboard.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item my-2\">\r\n          <h2 className=\"accordion-header\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseTwo\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseTwo\"\r\n              style={myAccordionStyle}\r\n            >\r\n              <strong>Free to use</strong>\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseTwo\"\r\n            className=\"accordion-collapse collapse\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myAccordionStyle}>\r\n              TextUtils is a free character counter tool that provides instant\r\n              character count & word count statistics for a given text.\r\n              TextUtils reports the number of words and characters. Thus it is\r\n              suitable for writing text with word/ character limit.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item my-2\">\r\n          <h2 className=\"accordion-header\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseThree\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseThree\"\r\n              style={myAccordionStyle}\r\n            >\r\n              <strong>Browser Compatible</strong>\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseThree\"\r\n            className=\"accordion-collapse collapse\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myAccordionStyle}>\r\n              This word counter software works in any web browsers such as\r\n              Chrome, Firefox, Internet Explorer, Safari, Opera. It suits to\r\n              count characters in facebook, blog, books, excel document, pdf\r\n              document, essays, etc.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport TextForm from \"./components/TextForm\";\r\nimport Alert from \"./components/Alert\";\r\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport About from \"./components/About\";\r\n\r\nfunction App() {\r\n  const [mode, setMode] = useState(\"light\");\r\n  const [alert, setAlert] = useState(null);\r\n  const [bgColor, setBgColor] = useState(\"#bfc0f7\");\r\n  const [darkTheme, setDarkTheme] = useState(\"default\");\r\n\r\n  const showAlert = (message, type) => {\r\n    setAlert({\r\n      msg: message,\r\n      type: type,\r\n    });\r\n    setTimeout(() => setAlert(null), 1200);\r\n  };\r\n\r\n  const changeBgColor = (clr) => {\r\n    setBgColor(clr);\r\n    document.body.style.backgroundColor = bgColor;\r\n  };\r\n\r\n  const toggleMode = () => {\r\n    if (mode === \"light\") {\r\n      setMode(\"dark\");\r\n      if (darkTheme === \"default\") {\r\n        changeBgColor(\"black\");\r\n      } else if (darkTheme === \"Blue\") {\r\n        changeBgColor(\"#042743\");\r\n        // document.body.style.backgroundColor = '#042743';\r\n      } else if (darkTheme === \"Green\") {\r\n        changeBgColor(\"#0f5032\");\r\n        // document.body.style.backgroundColor = '#0f5032';\r\n      }\r\n      showAlert(\"Dark mode has been enabled\", \"success\");\r\n    } else {\r\n      setMode(\"light\");\r\n      if (darkTheme === \"default\") {\r\n        changeBgColor(\"#bfc0f7\");\r\n        // document.body.style.backgroundColor = '#bfc0f7'\r\n      } else if (darkTheme === \"Blue\") {\r\n        changeBgColor(\"#c4e9ff\");\r\n        // document.body.style.backgroundColor = '#c4e9ff';\r\n      } else if (darkTheme === \"Green\") {\r\n        changeBgColor(\"#bcfbc7\");\r\n        // document.body.style.backgroundColor = '#bcfbc7';\r\n      }\r\n      showAlert(\"Dark Mode has been disabled\", \"success\");\r\n    }\r\n  };\r\n  const toggleDarkTheme = (theme) => {\r\n    setDarkTheme(theme);\r\n  };\r\n\r\n  if (mode === \"dark\") {\r\n    if (darkTheme === \"default\") {\r\n      document.body.style.backgroundColor = \"black\";\r\n    } else if (darkTheme === \"Blue\") {\r\n      document.body.style.backgroundColor = \"#042743\";\r\n    } else if (darkTheme === \"Green\") {\r\n      document.body.style.backgroundColor = \"#0f5032\";\r\n    }\r\n    // document.title =\r\n    //   \"TextUtils - Word counter | character counter | lowercase to uppercase | uppercase to lowercase | language detector DarkMode\";\r\n  } else {\r\n    if (darkTheme === \"default\") {\r\n      document.body.style.backgroundColor = \"#bfc0f7\";\r\n    } else if (darkTheme === \"Blue\") {\r\n      document.body.style.backgroundColor = \"#c4e9ff\";\r\n    } else if (darkTheme === \"Green\") {\r\n      document.body.style.backgroundColor = \"#bcfbc7\";\r\n    }\r\n    // document.title =\r\n    //   \"TextUtils - Word counter | character counter | lowercase to uppercase | uppercase to lowercase | language detector\";\r\n    // setInterval(()=>document.title = 'its interval time',1500);\r\n    // setInterval(()=>document.title = 'interval over',1000);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Navbar\r\n          title=\"TextUtils\"\r\n          mode={mode}\r\n          aboutText=\"About TextUtils\"\r\n          toggleMode={toggleMode}\r\n          toggleDarkTheme={toggleDarkTheme}\r\n        />\r\n        <Alert alert={alert} />\r\n        <div className=\"container my-3\">\r\n          <Routes>\r\n            <Route\r\n              exact\r\n              path=\"/\"\r\n              element={\r\n                <TextForm\r\n                  heading=\"Try TextUtils - word counter, character counter, remove extra spaces\"\r\n                  mode={mode}\r\n                  showAlert={showAlert}\r\n                  darkTheme={darkTheme}\r\n                />\r\n              }\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/TextUtils\"\r\n              element={\r\n                <TextForm\r\n                  heading=\"Try TextUtils - word counter, character counter, remove extra spaces\"\r\n                  mode={mode}\r\n                  showAlert={showAlert}\r\n                  darkTheme={darkTheme}\r\n                />\r\n              }\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/about\"\r\n              element={<About mode={mode} bgColor={bgColor} />}\r\n            />\r\n          </Routes>\r\n        </div>\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}